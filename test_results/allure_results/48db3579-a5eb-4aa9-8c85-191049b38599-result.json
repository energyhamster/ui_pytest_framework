{"name": "Check Radio Button", "status": "broken", "statusDetails": {"message": "packaging.version.InvalidVersion: Invalid version: 'C:/code/test/pythonCode/pythonProject/ui_pytest_framework/drivers/chromedriver.exe'", "trace": "@pytest.fixture()\n    def driver():\n        driver = webdriver.Chrome(ChromeDriverManager(\n>           'C:/code/test/pythonCode/pythonProject/ui_pytest_framework/drivers/chromedriver.exe').install())\n\nconftest.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\webdriver_manager\\chrome.py:39: in install\n    driver_path = self._get_driver_path(self.driver)\nvenv\\Lib\\site-packages\\webdriver_manager\\core\\manager.py:30: in _get_driver_path\n    file = self._download_manager.download_file(driver.get_url())\nvenv\\Lib\\site-packages\\webdriver_manager\\drivers\\chrome.py:44: in get_url\n    if version.parse(browser_version) < version.parse(\"106.0.5249.61\") :\nvenv\\Lib\\site-packages\\packaging\\version.py:52: in parse\n    return Version(version)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'Version' object has no attribute '_version'\") raised in repr()] Version object at 0x1aeb43bb1d0>, version = 'C:/code/test/pythonCode/pythonProject/ui_pytest_framework/drivers/chromedriver.exe'\n\n    def __init__(self, version: str) -> None:\n        \"\"\"Initialize a Version object.\n    \n        :param version:\n            The string representation of a version which will be parsed and normalized\n            before use.\n        :raises InvalidVersion:\n            If the ``version`` does not conform to PEP 440 in any way then this\n            exception will be raised.\n        \"\"\"\n    \n        # Validate the version and parse it into pieces\n        match = self._regex.search(version)\n        if not match:\n>           raise InvalidVersion(f\"Invalid version: '{version}'\")\nE           packaging.version.InvalidVersion: Invalid version: 'C:/code/test/pythonCode/pythonProject/ui_pytest_framework/drivers/chromedriver.exe'\n\nvenv\\Lib\\site-packages\\packaging\\version.py:197: InvalidVersion"}, "start": 1691767726888, "stop": 1691767726888, "uuid": "2dbf3e2a-7003-48aa-9b59-836cbf5ee696", "historyId": "efc8887a84b3f85815eb2d4c89803ce2", "testCaseId": "efc8887a84b3f85815eb2d4c89803ce2", "fullName": "tests.tests_elements.test_radio_button.TestRadioButton#test_radio_button", "labels": [{"name": "feature", "value": "RadioButton"}, {"name": "parentSuite", "value": "tests.tests_elements"}, {"name": "suite", "value": "test_radio_button"}, {"name": "subSuite", "value": "TestRadioButton"}, {"name": "host", "value": "TX-N-0684"}, {"name": "thread", "value": "27380-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.tests_elements.test_radio_button"}]}