{"name": "Check that table change counts of row", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of null (reading 'scrollIntoView')\n  (Session info: chrome=115.0.5790.171)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0067A813+48355]\n\t(No symbol) [0x0060C4B1]\n\t(No symbol) [0x00515358]\n\t(No symbol) [0x005187A1]\n\t(No symbol) [0x0051A19B]\n\t(No symbol) [0x0056D279]\n\t(No symbol) [0x0055A73C]\n\t(No symbol) [0x0056C922]\n\t(No symbol) [0x0055A536]\n\t(No symbol) [0x005382DC]\n\t(No symbol) [0x005393DD]\n\tGetHandleVerifier [0x008DAABD+2539405]\n\tGetHandleVerifier [0x0091A78F+2800735]\n\tGetHandleVerifier [0x0091456C+2775612]\n\tGetHandleVerifier [0x007051E0+616112]\n\t(No symbol) [0x00615F8C]\n\t(No symbol) [0x00612328]\n\t(No symbol) [0x0061240B]\n\t(No symbol) [0x00604FF7]\n\tBaseThreadInitThunk [0x76246359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D887A4+228]\n\tRtlGetAppContainerNamedObjectPath [0x77D88774+180]", "trace": "self = <tests.tests_elements.test_web_tables.TestWebTables object at 0x00000185E19CACD0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ac0b3731291593d8308cf47fd2845281\")>\n\n    @allure.title(\"Check that table change counts of row\")\n    def test_web_table_change_count_row(self, driver):\n        web_tables_page = WebTablesPage(driver, self.page_link)\n        web_tables_page.open()\n    \n>       count = web_tables_page.select_up_to_some_rows()\n\ntests\\tests_elements\\test_web_tables.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\elements\\web_tables_page.py:117: in select_up_to_some_rows\n    self.go_to_element(count_row_button)\npages\\base_page.py:35: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:500: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000185E1966ED0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"javascript error\",\"message\":\"javascript error: Cannot read properties of ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D887A4+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D88774+180]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of null (reading 'scrollIntoView')\nE         (Session info: chrome=115.0.5790.171)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0067A813+48355]\nE       \t(No symbol) [0x0060C4B1]\nE       \t(No symbol) [0x00515358]\nE       \t(No symbol) [0x005187A1]\nE       \t(No symbol) [0x0051A19B]\nE       \t(No symbol) [0x0056D279]\nE       \t(No symbol) [0x0055A73C]\nE       \t(No symbol) [0x0056C922]\nE       \t(No symbol) [0x0055A536]\nE       \t(No symbol) [0x005382DC]\nE       \t(No symbol) [0x005393DD]\nE       \tGetHandleVerifier [0x008DAABD+2539405]\nE       \tGetHandleVerifier [0x0091A78F+2800735]\nE       \tGetHandleVerifier [0x0091456C+2775612]\nE       \tGetHandleVerifier [0x007051E0+616112]\nE       \t(No symbol) [0x00615F8C]\nE       \t(No symbol) [0x00612328]\nE       \t(No symbol) [0x0061240B]\nE       \t(No symbol) [0x00604FF7]\nE       \tBaseThreadInitThunk [0x76246359+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D887A4+228]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D88774+180]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: JavascriptException"}, "steps": [{"name": "Select up to some row", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot read properties of null (reading 'scrollIntoView')\n  (Session info: chrome=115.0.5790.171)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0067A813+48355]\n\t(No symbol) [0x0060C4B1]\n\t(No symbol) [0x00515358]\n\t(No symbol) [0x005187A1]\n\t(No symbol) [0x0051A19B]\n\t(No symbol) [0x0056D279]\n\t(No symbol) [0x0055A73C]\n\t(No symbol) [0x0056C922]\n\t(No symbol) [0x0055A536]\n\t(No symbol) [0x005382DC]\n\t(No symbol) [0x005393DD]\n\tGetHandleVerifier [0x008DAABD+2539405]\n\tGetHandleVerifier [0x0091A78F+2800735]\n\tGetHandleVerifier [0x0091456C+2775612]\n\tGetHandleVerifier [0x007051E0+616112]\n\t(No symbol) [0x00615F8C]\n\t(No symbol) [0x00612328]\n\t(No symbol) [0x0061240B]\n\t(No symbol) [0x00604FF7]\n\tBaseThreadInitThunk [0x76246359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D887A4+228]\n\tRtlGetAppContainerNamedObjectPath [0x77D88774+180]\n\n", "trace": "  File \"C:\\code\\test\\pythonCode\\pythonProject\\ui_pytest_framework\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\code\\test\\pythonCode\\pythonProject\\ui_pytest_framework\\pages\\elements\\web_tables_page.py\", line 117, in select_up_to_some_rows\n    self.go_to_element(count_row_button)\n  File \"C:\\code\\test\\pythonCode\\pythonProject\\ui_pytest_framework\\pages\\base_page.py\", line 35, in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n  File \"C:\\code\\test\\pythonCode\\pythonProject\\ui_pytest_framework\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 500, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\code\\test\\pythonCode\\pythonProject\\ui_pytest_framework\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\code\\test\\pythonCode\\pythonProject\\ui_pytest_framework\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1691765192900, "stop": 1691765192943}], "start": 1691765190292, "stop": 1691765192947, "uuid": "a5ef82f0-35f2-4c7f-bdd3-f320232c20d1", "historyId": "6d864d589034502162925978011f7434", "testCaseId": "6d864d589034502162925978011f7434", "fullName": "tests.tests_elements.test_web_tables.TestWebTables#test_web_table_change_count_row", "labels": [{"name": "feature", "value": "Web Tables"}, {"name": "parentSuite", "value": "tests.tests_elements"}, {"name": "suite", "value": "test_web_tables"}, {"name": "subSuite", "value": "TestWebTables"}, {"name": "host", "value": "TX-N-0684"}, {"name": "thread", "value": "1308-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.tests_elements.test_web_tables"}]}