{"name": "Check TextBox", "status": "broken", "statusDetails": {"message": "TypeError: expected str, bytes or os.PathLike object, not ChromeDriverManager", "trace": "@pytest.fixture()\n    def driver():\n>       driver = webdriver.Chrome(ChromeDriverManager(\n            'C:/code/test/pythonCode/pythonProject/ui_pytest_framework/drivers/chromedriver.exe'))\n\nconftest.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:80: in __init__\n    super().__init__(\nvenv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:101: in __init__\n    self.service.start()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py:90: in start\n    self._start_process(self.path)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\service.py:203: in _start_process\n    self.process = subprocess.Popen(\nC:\\Users\\Vladyslav.Opanasenko\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\subprocess.py:1024: in __init__\n    self._execute_child(args, executable, preexec_fn, close_fds,\nC:\\Users\\Vladyslav.Opanasenko\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\subprocess.py:1433: in _execute_child\n    args = list2cmdline(args)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nseq = [<webdriver_manager.chrome.ChromeDriverManager object at 0x000002EBB002E790>, '--port=58771']\n\n    def list2cmdline(seq):\n        \"\"\"\n        Translate a sequence of arguments into a command line\n        string, using the same rules as the MS C runtime:\n    \n        1) Arguments are delimited by white space, which is either a\n           space or a tab.\n    \n        2) A string surrounded by double quotation marks is\n           interpreted as a single argument, regardless of white space\n           contained within.  A quoted string can be embedded in an\n           argument.\n    \n        3) A double quotation mark preceded by a backslash is\n           interpreted as a literal double quotation mark.\n    \n        4) Backslashes are interpreted literally, unless they\n           immediately precede a double quotation mark.\n    \n        5) If backslashes immediately precede a double quotation mark,\n           every pair of backslashes is interpreted as a literal\n           backslash.  If the number of backslashes is odd, the last\n           backslash escapes the next double quotation mark as\n           described in rule 3.\n        \"\"\"\n    \n        # See\n        # http://msdn.microsoft.com/en-us/library/17w5ykft.aspx\n        # or search http://msdn.microsoft.com for\n        # \"Parsing C++ Command-Line Arguments\"\n        result = []\n        needquote = False\n>       for arg in map(os.fsdecode, seq):\nE       TypeError: expected str, bytes or os.PathLike object, not ChromeDriverManager\n\nC:\\Users\\Vladyslav.Opanasenko\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\subprocess.py:608: TypeError"}, "start": 1691767744326, "stop": 1691767744326, "uuid": "423448af-7377-4be4-9fa9-4f8ed17077a0", "historyId": "8061806743db0d47432aa00f7b5e8cee", "testCaseId": "8061806743db0d47432aa00f7b5e8cee", "fullName": "tests.tests_elements.test_text_box.TestTextBox#test_text_box_submit", "labels": [{"name": "feature", "value": "TextBox"}, {"name": "parentSuite", "value": "tests.tests_elements"}, {"name": "suite", "value": "test_text_box"}, {"name": "subSuite", "value": "TestTextBox"}, {"name": "host", "value": "TX-N-0684"}, {"name": "thread", "value": "20900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.tests_elements.test_text_box"}]}